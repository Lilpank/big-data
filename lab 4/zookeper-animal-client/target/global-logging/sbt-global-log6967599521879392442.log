[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Даниил\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Даниил\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 17.0.2)
[debug]       Load.loadUnit: plugins took 88.4287ms
[debug]       Load.loadUnit: defsScala took 0.232ms
[debug] [Loading] Scanning directory C:\Users\Даниил\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Даниил\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 13.6758 ms
[debug]           Load.resolveProject(global-plugins) took 29.3846ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Даниил\.sbt\1.0\plugins, plugins: List(<none>))) took 65.4466ms
[debug] [Loading] Done in C:\Users\Даниил\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 82.9893ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1868ms
[debug]     Load.loadUnit(file:/C:/Users/Даниил/.sbt/1.0/plugins/, ...) took 179.2692ms
[debug]   Load.apply: load took 373.9343ms
[debug]   Load.apply: resolveProjects took 4.0959ms
[debug]   Load.apply: finalTransforms took 68.5134ms
[debug]   Load.apply: config.delegates took 6.5227ms
[debug]   Load.apply: Def.make(settings)... took 379.0756ms
[debug]   Load.apply: structureIndex took 83.0281ms
[debug]   Load.apply: mkStreams took 1.227ms
[info] loading global plugins from C:\Users\Даниил\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5089.1469ms
[debug]           Load.loadUnit: plugins took 15.1065ms
[debug]           Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory C:\Users\Даниил\Desktop\big_data\lab 4\zookeper-animal-client\project
[debug]             Load.loadUnit: mkEval took 4.2718ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Даниил\Desktop\big_data\lab 4\zookeper-animal-client\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5314 ms
[info] loading settings for project zookeper-animal-client-build from idea.sbt ...
[debug]               Load.resolveProject(zookeper-animal-client-build) took 6.9407ms
[debug]             Load.loadTransitive: finalizeProject(Project(id zookeper-animal-client-build, base: C:\Users\Даниил\Desktop\big_data\lab 4\zookeper-animal-client\project, plugins: List(<none>))) took 8.9639ms
[debug] [Loading] Done in C:\Users\Даниил\Desktop\big_data\lab 4\zookeper-animal-client\project, returning: (zookeper-animal-client-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1848.4651ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.0522ms
[debug]         Load.loadUnit(file:/C:/Users/Даниил/Desktop/big_data/lab%204/zookeper-animal-client/project/, ...) took 1871.4466ms
[debug]       Load.apply: load took 1873.5695ms
[debug]       Load.apply: resolveProjects took 0.1486ms
[debug]       Load.apply: finalTransforms took 17.4479ms
[debug]       Load.apply: config.delegates took 0.3368ms
[debug]       Load.apply: Def.make(settings)... took 65.2255ms
[debug]       Load.apply: structureIndex took 26.7661ms
[debug]       Load.apply: mkStreams took 0.0025ms
[info] loading project definition from C:\Users\Даниил\Desktop\big_data\lab 4\zookeper-animal-client\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4383.6452ms
[debug]     Load.loadUnit: defsScala took 0.0019ms
[debug] [Loading] Scanning directory C:\Users\Даниил\Desktop\big_data\lab 4\zookeper-animal-client
[debug]       Load.loadUnit: mkEval took 0.2842ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.7144 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 28.2445ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Даниил\Desktop\big_data\lab 4\zookeper-animal-client, plugins: List(<none>))) took 31.4262ms
[debug] [Loading] Done in C:\Users\Даниил\Desktop\big_data\lab 4\zookeper-animal-client, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1442.726ms
[debug]     Load.loadUnit: cleanEvalClasses took 21.7012ms
[debug]   Load.loadUnit(file:/C:/Users/Даниил/Desktop/big_data/lab%204/zookeper-animal-client/, ...) took 5848.7345ms
[debug] Load.apply: load took 5850.335ms
[debug] Load.apply: resolveProjects took 0.1243ms
[debug] Load.apply: finalTransforms took 26.3396ms
[debug] Load.apply: config.delegates took 0.3112ms
[debug] Load.apply: Def.make(settings)... took 90.7906ms
[debug] Load.apply: structureIndex took 29.1996ms
[debug] Load.apply: mkStreams took 0.0038ms
[info] set current project to zookeper-animal-client (in build file:/C:/Users/Даниил/Desktop/big_data/lab%204/zookeper-animal-client/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 7696 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 7696, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to zookeper-animal-client (in build file:/C:/Users/Даниил/Desktop/big_data/lab%204/zookeper-animal-client/)
[debug] > Exec(idea-shell, None, None)
